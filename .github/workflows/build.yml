name: Build and Test

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: bash

env:
  CACHE_KEY_COMMIT: build-maven-repository-${{ github.sha }}
  CACHE_KEY_RUN: build-maven-repository-${{ github.sha }}-${{ github.run_id }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Prepare artifacts
        uses: actions/cache@v4
        with:
          enableCrossOsArchive: true
          path: ~/.m2/repository
          key: ${{ env.CACHE_KEY_COMMIT }}

      - name: Prepare Build
        run: echo DEBUG ./ci-support/prepare-build.sh

  build:
    needs: prepare

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        java_distribution: [ temurin, zulu ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Find user Home
        id:
          user-home
        run:
          echo "user-home=$HOME" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: ${{ matrix.java_distribution }}

      - name: Restore build artifacts
        uses: actions/cache/restore@v4
        with:
          enableCrossOsArchive: true
          path: ${{ steps.user-home.outputs.user-home }}/.m2/repository
          key: ${{ env.CACHE_KEY_RUN }}
          restore-keys: |
            ${{ env.CACHE_KEY_COMMIT }}

      - name: Build with Maven
#        run: ./ci-support/build.sh
        run: |
          mkdir -p ${{ steps.user-home.outputs.user-home }}/.m2/repository
          date --iso-8601=seconds > ${{ steps.user-home.outputs.user-home }}/.m2/repository/build.timestamp

      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-reports-${{ matrix.os }}-jdk${{ matrix.java_distribution }}
          path: '**/target/surefire-reports/**'

      - name: Save build artifacts
        uses: actions/cache/save@v4
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.java_distribution == 'temurin' }}
        with:
          enableCrossOsArchive: true
          path: ${{ steps.user-home.outputs.user-home }}/.m2/repository
          key: ${{ env.CACHE_KEY_RUN }}

  submit-maven-dependencies:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Restore build artifacts
        uses: actions/cache/restore@v4
        with:
          enableCrossOsArchive: true
          fail-on-cache-miss: true
          path: ${{ steps.user-home.outputs.user-home }}/.m2/repository
          key: ${{ env.CACHE_KEY_RUN }}
          restore-keys: |
            ${{ env.CACHE_KEY_RUN }}

      - name: Submit Dependency Snapshot
        uses: advanced-security/maven-dependency-submission-action@v4
        with:
          settings-file: .github/mvn-settings.xml
          maven-args: "-V -B"

  test-weld:
    needs: build
    uses: ./.github/workflows/test-weld.yml
    with:
      cache-key: build-maven-repository-${{ github.sha }}-${{ github.run_id }}

  test-deltaspike:
    needs: build
    uses: ./.github/workflows/test-deltaspike.yml
    with:
      cache-key: build-maven-repository-${{ github.sha }}-${{ github.run_id }}

  test-spock:
    needs: build
    uses: ./.github/workflows/test-spock.yml
    with:
      cache-key: build-maven-repository-${{ github.sha }}-${{ github.run_id }}
